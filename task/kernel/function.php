<?php	/******************************************************************************										Функции	******************************************************************************/	//------------------------ Получение информации о задании --------------------------------------------	function &task($id, $fields='*')	{		if(!is_numeric($id)) return false;		$id = (int)$id;		global $task, $table_task;		$fields = $task->db->prepare_field_name($fields);		$res = $task->db->query("SELECT $fields FROM `$table_task` WHERE id = '%u' LIMIT 1", $id) or die($task->db->error());		$row = $res->fetch_assoc();		return $row;	}	//--------------------------------- Создание поля для работы с диалогами ---------------------------------	function add_dialog_field()	{		global $task, $table_task;		$task->db->query("ALTER IGNORE TABLE `$table_task` ADD COLUMN `dialog_id` INT UNSIGNED DEFAULT NULL");// or die($task->db->error());		return true;	}	//----------------------------------- вывод диалога для задания ------------------------------------------	// $tsk - либо номер задания, либо массив со строчкой из БД	//	function show_task_dialog($tsk)	{		global $task, $_, $ticket;		if(is_numeric($tsk)) $tsk = &task((int)$tsk);		else if(  !is_array($tsk)) return $_('Задание не найдено'); 		//if(!isset($_SESSION['user_id'])) return $_('Обсуждение задания не отображается. Войдите в систему.');		// Если используем диалоги, есть ли у нас записи о номерах диалогов		if(TASK_DIALOG)			{			if(!isset($tsk['dialog_id'])) {				add_dialog_field();				$tsk['dialog_id'] = NULL; }			}		else if(isset($tsk['dialog_id']))			user_error($_('Функция диалога для заданий не используется, удалите поле \'dialog_id\' из таблицы ').DB_TASK_NAME.'.'.$table_task, E_USER_WARNING);		// выводим диалог		if(TASK_DIALOG)			{			if( $tsk['dialog_id'] != NULL &&				(				($tsk['status'] == 'NEW' || $tsk['status'] == 'GETS') ||								// новый могут обсуждать все				($tsk['user'] == $_SESSION['user_id'] || $tsk['solver'] == $_SESSION['user_id']) ||		// владелец, Автор				check_right('TSK_SEE_OTHERS_TASK')														// имеет право просмотра всех заданий				)){				echo '<h3 style=\'text-align:center;\'>Обсуждение задания</h3>';				//вывод диалогов				call_user_func($ticket->show_dialog, $tsk['dialog_id']);				}			}		return true;	}	//----------------получение ссылки на задание--------------------------	function get_task_link($task_id,$teg_a="",$text="")	{		$file = "";		//проверяем есть ли решение в папке открытых решений		$files = glob( TASK_ROOT.'/'.$task_id.'.*');		if(!isset($files[0])) return "Ошибка! Задание не найдено. Попробуйте загрузить еще раз. В случае повторной ошибки обратитесь к администратору.";		$file = TASK_ROOT_RELATIVE.'/'.basename($files[0]);		$ret = "<a href='{$file}' {$teg_a}>";		if($text!="") $ret .= $text;		else          $ret .= "открыть";		$ret .="</a>";		return $ret;	}// ----------------------------------- идем к скрипту отдачи файла ---------------------------------------function go_download($task_id){		$link = url(NULL, 'TASK','get_solving_link','id='.$task_id);		?>		<script lang="text/javascript">				RUN_AFTER_LOAD += "location.href='<?php echo $link; ?>'";		</script>	<?php		show_msg(NULL, "Если у вас отключен javascript. Для получения решения нажмите <a href='".$link."'>здесь</a><br>",MSG_INFO,MSG_RETURN);	}// ----------------------------------- отдаем файл с решением ---------------------------------------------function get_solv($task_id){		$files = glob( SOLVING_ROOT.'/'.$task_id.'.*');		if(!isset($files[0])){			echo "Решение задания {$task_id} не найдено";			return;			}		$filename = $files[0];		$from = 0;		$razmer = sprintf("%u", filesize($filename));		$http_range = getenv("HTTP_RANGE");		if (!empty($http_range)){			$range = substr($http_range, strpos($http_range, '=') + 1);			$from = strtok($range, '-');			header('HTTP/1.1 206 Partial Content');			}		else			header('HTTP/1.1 200 Ok');		header("Last-Modified: " . date("D, d M Y H:i:s ", filemtime($filename)). "GMT");		header("Accept-Ranges: bytes");		header("Content-Length: " . ($razmer - $from));		if (!empty($http_range)){			//header($conrange);			header("Content-Range: bytes " . $from . "-" . ($razmer - 1) . "/" . $razmer);			}		header("Connection: close");		header("Content-Type: application/octet-stream");		// for android uppercase filename		header('Content-Disposition: attachment;filename="'.strtoupper(basename($filename)).'"');		$fp = fopen($filename, 'rb');		if ($from)	fseek($fp, $from);		while(!feof($fp)){			echo fread($fp, 4096);			flush();			}		fclose($fp);	}function reg_and_login_user_for_new_task() {	global $URL;	$login = isset($_POST['login'])?$_POST['login']:"user".time();	$password = isset($_POST['password'])?$_POST['password']:'NOPASSWD';	$data = isset($_POST['mail'])?array('mail'=>$_POST['mail']):array();	reg_user($login, $password, $data);	$URL['RESULT'] = login($login, $password);	$reg_and_login_user_for_new_task = true;	define('reg_and_login_user_for_new_task', true);}/*-------------------------------------- функция добавления нового задания ---------------------------------------	Параметры POST:	section - 		предмет	subsection -   	раздел предмета	data, r_hour - 	дата и час до которой надо решить	price - 		стоимость задания    mode - 			режим решения задания: 	0 - быстрый старт    							1 - игра по своим правилам	параметры FILES:	loadfile - 		загружаемое задание*/function create_new_task(){	global $URL;	if(true !== $URL['RESULT'] && defined('reg_and_login_user_for_new_task')) return; // регистрация при загрузке задания не прошла успешно	if(isset($_POST['section']))    $section = $_POST['section'];	if(isset($_POST['subsection'])) $subsection = $_POST['subsection'];	if(isset($_POST['r_hour']) && is_numeric($_POST['r_hour'])) $_POST['r_hour'] = (int)$_POST['r_hour'];	if(isset($_POST['price']) && is_numeric($_POST['price'])) $_POST['price'] = 0+$_POST['price'];	if(isset($_POST['mode']) && $_POST['mode']!=0 && $_POST['mode']!=1) $_POST['mode']=0;	if(isset($_POST['section']) &&		isset($_POST['subsection']) &&		ereg("^[0-9]{1,3}$",$_POST['r_hour']) &&		(int)$_POST['r_hour']>=0 && (int)$_POST['r_hour']<25 &&    	ereg("^[0-9]{1,2} [^\s0-9]{1,} [0-9]{4}$",$_POST['data']) &&		(ereg("^[1-9][0-9]{0,5}$",$_POST['price']) && ((int)$_POST['price'])!=0)&&		isset($_FILES['loadfile']['name']) &&		ereg("^[01]$",$_POST['mode']))		{				global $_;		if(!isset($_SESSION['user_id'])){			$URL['RESULT'] = $_("Войдите в ситему под своим именем.<br><a href='/'>[ok]</a>");			return;			}		//проверка размера файла		if($_FILES["loadfile"]["size"] > MAX_FILE_SIZE*1024*1024){			$URL['RESULT'] =  $_("Размер файла превышает ".MAX_FILE_SIZE." мегабайта.<br><a href='#' onmouseup='javascript:submenu(this.parentNode);'>[ok]</a>");			return;			}		$add_timestamp = time();		$add_data = date('Y-m-d H:i:s',$add_timestamp);		if($_POST['mode']==1)     //игра по моим правилам			$status = "GETS";		else{        //быстрый старт			//$status = "NEW";			$URL['RESULT'] = $_("Не пытайтесь обмануть систему, заказы принимаются только в режиме Игра по моим правилам");			return;		}      	//замена русских имен месяцев для функции  strtotime()		$_POST['data'] = mb_strtolower( $_POST['data'], SITE_CHARSET );        $month_ru2 = Array('янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек');        $month_ru = Array('январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь');				$month_en = Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');				for($i=0;$i<12;$i++)					$_POST['data'] = str_replace($month_ru[$i],$month_en[$i],$_POST['data']);				for($i=0;$i<12;$i++)					$_POST['data'] = str_replace($month_ru2[$i],$month_en[$i],$_POST['data']);				$t = strtotime($_POST['data']." ".$_POST['r_hour']."hours");				$r_date = date('Y-m-d H:i:s',$t);				if($r_date=="" || $t<time()){					$URL['RESULT'] = $_("Ошибка при указании даты.<br><a href='#' onmouseup='javascript:submenu(this.parentNode);'>[ok]</a>");					return;					}			//обрезаем строки			$section = substr($section,0,255);			$subsection = substr($subsection,0,255);			$ext = '.'.end (explode (".", $_FILES["loadfile"]["name"])); // расширение файла			$temp_file = TASK_ROOT."_".$_SESSION['user_id'].$ext;	   		if(copy($_FILES["loadfile"]["tmp_name"],$temp_file))	   		{    			//добавить тикет к заданию				$dialog_fileld = '';				$dialog_value = '';				if( TASK_DIALOG ){					global $ticket;					$dialog_id = call_user_func($ticket->add, 'HIDDEN', $section.'-'.$subsection, '', NULL, NULL, NULL, -1); // -1 -для всех					if(is_numeric($dialog_id)){						$dialog_fileld = ',dialog_id';						$dialog_value = ',\'%u\'';						}					// Добавить сообщение с тем что нужно выполнить					if(isset($_POST['task_info']) && (!empty($_POST['task_info']) && $_POST['task_info']!='Что нужно сделать:'))						call_user_func($ticket->add_question, $dialog_id, NULL, $_POST['task_info']);					}				//Получить номер задания в системе				global $task, $table_task, $users, $table_users;				$query = "INSERT INTO `$table_task`					(user,section,subsection,add_date,resolve_until,price,status{$dialog_fileld})					VALUES('%u', '%s', '%s', '%s', '%s', '%u', '%s'{$dialog_value})";				$values = array($_SESSION['user_id'], $section, $subsection, $add_data, $r_date, $_POST['price'], $status);				if($dialog_fileld != '') $values[] = $dialog_id;				$task->db->query($query, $values) or die($task->db->error());				$id = $task->db->insert_id;				$file_name = TASK_ROOT.'/'.$id.$ext;				rename($temp_file,$file_name);				//рассылка писем решающим				// асинхронно выполняем скрипт				exec_script('http://'.DOMAIN.url(NULL, 'TASK', 'admin/mailer'), array('name'=>'new_task', 'task_id'=>$id));				$URL['NEW_TASK_ID'] = $id;				$URL['RESULT'] =  true;				// устанавливаем пользователю выбранный способ оповещения				set_notify_method();				return;			}			else{				$URL['RESULT'] =  $_("Возникла ошибка при загрузке файла. Проверьте интернет соединение.<br>");				return;			}	}else{		$URL['RESULT'] =  "Возникла ошибка при добавлении задания. Корректно заполните все поля.";		return;	}}//------------------------------------------------------------------------------------------------------function set_notify_method(){	global $USER,$users,$table_users,$URL;	if(!isset($_POST['notificationMethod']) || !isset($USER)) return;	switch($_POST['notificationMethod']){		case 'phoneNotificate':		$method='phone';		if(!empty($_POST[$method]))		  $users->db->query("UPDATE `$table_users` SET $method='%s',notification='%s' WHERE id='%d'", array($_POST[$method], $method, $USER['id']));		break;		case 'mailNotificate':		$method='mail';		if(!empty($_POST[$method]))		  $users->db->query("UPDATE `$table_users` SET $method='%s',notification='%s' WHERE id='%d'", array($_POST[$method], $method, $USER['id']));		break;		case "noNotificate":		$method='NULL';		$users->db->query("UPDATE `$table_users` SET notification=NULL WHERE id='%d'", $USER['id']);		break;	}	if ($_POST['notificationMethod']=='mailNotificate') {	  $mes = "Уважаемый пользователь,\n";	  $mes.= "Вы загрузили задание на сайт Получи 5.\n";	  $mes.= "Как только задание будет готово к решению мы вышлем Вам уведомление на этот почтовый адрес\n";	  $mes.= "или вы можете проверить состояние задания сами по ссылке http://".MAIL_DOMAIN.url(NULL,'TASK','task',"id=".$URL['NEW_TASK_ID'])."\n";	  $mes.= "Искренне Ваш, Получи [5]";	  sendmail ($_POST['mail'],"Ваше задание",$mes);	}}//------------------------------------------------------------------------------------------------------function check_can_get_solv($get_id) {	if(!isset($get_id))		{		show_msg(NULL, "Какое задание Вам нужно?",MSG_WARNING,MSG_RETURN);		exit;		}	//данные о задании	global $table_task, $msconnect_task; 	$query="SELECT user,solver,user_pay,price FROM `$table_task`     		WHERE id = '{$get_id}'";	$res = mysql_query($query,$msconnect_task) or die("Ошибка при получении своего решения.<br>".mysql_error());	$row = mysql_fetch_assoc($res);	//задание не найдено	if(mysql_num_rows($res)==0)		{		show_msg(NULL,"В системе не существует задания №{$get_id}",MSG_INFO,MSG_RETURN);		return true;		}	//любой получают оплаченную задачу	if($row['user_pay']==1)		return true;	if(!isset($_SESSION['user_id'])){		$rel1 = url('войдите', 'USERS', 'in');		$rel2 = url('зарегистрируйтесь', 'USERS', 'reg_user');		echo "<p align='center'>Пожалуйста ".$rel1." в систему или ".$rel2."</p>";		return false;		}		else		{			//решающий скачивает свое решение	     	if($row['solver'] == $_SESSION['user_id'])	     		{				//проверка группы автора				if( !user_in_group('SOLVER', R_MSG) ) return;	     		$id = $get_id;	   			return true;	       		}	       	//ученик получает перерешенную задачу	     	if($row['user_pay']==1 && $row['user'] == $_SESSION['user_id'])	     		{	     		//проверка группы пользователя				if( !user_in_group('USER', R_MSG) ) return;	   			return true;	       		}	       	//администратор	     	if($_SESSION['user_id']==0)	     		{	     		//проверка прав администратора				check_admin_access();	     		$id = $get_id;	   			return true;	       		}			// тот кто оценивает может скачать решение без платы			if(check_right('TSK_RATING_OTHERS'))				{				$id = $get_id;	   			return true;	       		}	  }	  return false;}?>